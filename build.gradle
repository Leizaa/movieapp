// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        versions = [
                gradle             : '7.0.2',
                kotlin             : "1.5.30",
                androidXCore       : "1.6.0",
                androidXCompat     : "1.3.1",
                androidXViewModel  : "2.0.0",
                googleMaterial     : "1.4.0",
                jUnit              : "4.13.2",
                jUnitExt           : "1.1.3",
                espressoCore       : "3.4.0",
                coroutines         : "1.2.2",
                daggerHilt         : "2.38.1",
                hiltJetpack        : "1.0.0-alpha03",
                okHttp             : "4.9.1",
                retrofit           : "2.9.0",
                glide              : "4.9.0"
        ]
    }

    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$versions.gradle"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$versions.daggerHilt"
    }
}

allprojects {
    ext {
        kotlinLibs = [
                "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
        ]

        androidXLibs = [
                coreKtx        : "androidx.core:core-ktx:$versions.androidXCore",
                appCompat      : "androidx.appcompat:appcompat:$versions.androidXCompat",
                commonLifeCycle: "androidx.lifecycle:lifecycle-common-java8:$versions.androidXViewModel",
                viewModel      : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidXViewModel",
                liveData       : "androidx.lifecycle:lifecycle-livedata:$versions.androidxViewModel",
                liveDataKtx    : "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1",
                constraintLayout: "androidx.constraintlayout:constraintlayout:2.1.3"
        ]

        googleMaterialLibs = [
                material: "com.google.android.material:material:$versions.googleMaterial",
        ]

        jUnitLibs = [
                jUnit: "junit:junit:$versions.jUnit"
        ]

        androidTestLibs = [
                jUnitExt: "androidx.test.ext:junit:$versions.jUnitExt",
                espresso: "androidx.test.espresso:espresso-core:$versions.espressoCore"
        ]

        coroutineLibs = [
                core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
                android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
        ]

        hiltLibs = [
                hilt         : "com.google.dagger:hilt-android:$versions.daggerHilt",
                hiltLifeCycle: "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hiltJetpack",
        ]

        hiltCompilerLibs = [
                hiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:$versions.daggerHilt",
                hiltCompiler       : "androidx.hilt:hilt-compiler:$versions.hiltJetpack"
        ]

        retrofitLibs = [
                core : "com.squareup.retrofit2:retrofit:$versions.retrofit",
                gsonConverter: "com.squareup.retrofit2:converter-gson:$versions.retrofit",
        ]

        okhttpLibs = [
                httpInterceptor: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
                urlConnection  : "com.squareup.okhttp3:okhttp-urlconnection:$versions.okHttp"
        ]

        glideLibs = [
                core          : "com.github.bumptech.glide:glide:$versions.glide",
                compiler      : "com.github.bumptech.glide:glide:$versions.glide"
        ]
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}